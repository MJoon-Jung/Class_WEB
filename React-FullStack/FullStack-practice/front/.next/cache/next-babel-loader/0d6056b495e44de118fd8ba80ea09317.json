{"ast":null,"code":"import { all, fork, call, takeLatest, put, delay } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nconst ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nconst ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nconst ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["D:/program/node_workspace/WEB/React-FullStack/FullStack-practice/front/sagas/post.js"],"names":["all","fork","call","takeLatest","put","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPostAPI","data","post","addPost","action","type","result","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAwD,0BAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOL,KAAK,CAACM,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEP,gBADA;AAENG,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,KAAD,CAAT;AAIH,GAPD,CAOC,OAAMM,GAAN,EAAU;AACP,UAAMb,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEN,gBADA;AAENE,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,YAAV,GAAwB;AACpB,QAAMhB,UAAU,CAACI,gBAAD,EAAmBM,OAAnB,CAAhB;AACH;;AACD,eAAe,UAAUO,QAAV,GAAoB;AAC/B,QAAMpB,GAAG,CAAC,CACNC,IAAI,CAACkB,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, call, takeLatest, put, delay } from \"@redux-saga/core/effects\"\r\nimport axios from 'axios';\r\n\r\nconst ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nconst ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nconst ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action){\r\n    try{    \r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost), \r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}