{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggingIn: false,\n  isLoggingOut: false,\n  isLoggedIn: false,\n  signUpData: {},\n  loginData: {},\n  me: null\n};\nexport var SIGN_UP = 'SIGN_UP';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var signUpAction = function signUpAction(data) {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\nexport var signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data: data\n  };\n};\nexport var loginSuccessAction = function loginSuccessAction(data) {\n  return {\n    type: 'LOG_IN_SUCCESS',\n    data: data\n  };\n};\nexport var loginFailureAction = function loginFailureAction(data) {\n  return {\n    type: 'LOG_IN_FAILURE',\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction(data) {\n  return {\n    type: 'LOG_OUT_REQUREST',\n    data: data\n  };\n};\nexport var logoutSuccessAction = function logoutSuccessAction() {\n  return {\n    type: 'LOG_OUT_SUCCESS'\n  };\n};\nexport var logoutFailureAction = function logoutFailureAction() {\n  return {\n    type: 'LOG_OUT_FAILURE'\n  };\n};\nexport var signUp = function signUp() {\n  return {\n    type: SIGN_UP\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      {\n        console.log('reducer login');\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: true\n        });\n      }\n\n    case 'LOG_IN_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: _objectSpread(_objectSpread({}, action.data), {}, {\n            nickname: 'MJoonJung'\n          }),\n          loginData: action.data\n        });\n      }\n\n    case 'LOG_IN_FAILURE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false\n        });\n      }\n\n    case 'LOG_OUT_REQUEST':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: true\n        });\n      }\n\n    case 'LOG_OUT_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false,\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case 'LOG_OUT_FAILURE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false\n        });\n      }\n\n    case 'SIGN_UP':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["D:/program/node_workspace/WEB/React-FullStack/FullStack-practice/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggingOut","isLoggedIn","signUpData","loginData","me","SIGN_UP","SIGN_UP_SUCCESS","signUpAction","data","type","signUpSuccess","loginRequestAction","loginSuccessAction","loginFailureAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","signUp","state","action","console","log","nickname"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  isLoggingIn: false,\r\n  isLoggingOut: false,\r\n  isLoggedIn: false,\r\n  signUpData: {},\r\n  loginData: {},\r\n  me: null,\r\n};\r\n\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\n\r\nexport const signUpAction = (data) => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = {\r\n  type: SIGN_UP_SUCCESS,\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_REQUEST',\r\n    data,\r\n  }\r\n};\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_SUCCESS',\r\n    data,\r\n  }\r\n};\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_FAILURE',\r\n    data,\r\n  }\r\n};\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: 'LOG_OUT_REQUREST',\r\n    data,\r\n  }\r\n};\r\nexport const logoutSuccessAction = () => {\r\n  return {\r\n    type: 'LOG_OUT_SUCCESS',\r\n  }\r\n};\r\nexport const logoutFailureAction = () => {\r\n  return {\r\n    type: 'LOG_OUT_FAILURE',\r\n  }\r\n};\r\nexport const signUp = () => {\r\n  return {\r\n    type: SIGN_UP,\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN_REQUEST': {\r\n      console.log('reducer login')\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n      };\r\n    }\r\n    case 'LOG_IN_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: true,\r\n        me: { ...action.data, nickname: 'MJoonJung'},\r\n        loginData: action.data,\r\n      };\r\n    }\r\n    case 'LOG_IN_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n      };\r\n    }\r\n    case 'LOG_OUT_REQUEST': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n    }\r\n    case 'LOG_OUT_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    }\r\n    case 'LOG_OUT_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n      };\r\n    }\r\n    case 'SIGN_UP': {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}