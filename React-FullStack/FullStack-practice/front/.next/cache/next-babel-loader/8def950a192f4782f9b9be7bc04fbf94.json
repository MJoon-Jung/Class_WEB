{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  id: 1,\n  nickname: '제로초',\n  Posts: [],\n  Followings: [],\n  Followers: []\n};\nexport const initialState = {\n  isLoggingIn: false,\n  isLoggingOut: false,\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUREST',\n    data\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: 'LOG_IN_SUCCESS',\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: 'LOG_IN_FAILURE',\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: 'LOG_OUT_REQUREST',\n    data\n  };\n};\nexport const logoutSuccessAction = () => {\n  return {\n    type: 'LOG_OUT_SUCCESS'\n  };\n};\nexport const logoutFailureAction = () => {\n  return {\n    type: 'LOG_OUT_FAILURE'\n  };\n};\nexport const signUp = () => {\n  return {\n    type: SIGN_UP\n  };\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: true\n        });\n      }\n\n    case 'LOG_IN_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: _objectSpread(_objectSpread({}, action.data), {}, {\n            nickname: 'MJoonJung'\n          }),\n          loginData: action.data\n        });\n      }\n\n    case 'LOG_IN_FAILURE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false\n        });\n      }\n\n    case 'LOG_OUT_REQUEST':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: true\n        });\n      }\n\n    case 'LOG_OUT_SUCCESS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false,\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case 'LOG_OUT_FAILURE':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false\n        });\n      }\n\n    case 'SIGN_UP':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["D:/program/node_workspace/WEB/React-FullStack/FullStack-practice/front/reducers/user.js"],"names":["dummyUser","id","nickname","Posts","Followings","Followers","initialState","isLoggingIn","isLoggingOut","isLoggedIn","me","signUpData","loginData","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","signUpAction","data","type","signUpSuccess","loginRequestAction","loginSuccessAction","loginFailureAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","signUp","state","action"],"mappings":"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","sourcesContent":["const dummyUser = {\r\n  id: 1,\r\n  nickname: '제로초',\r\n  Posts: [],\r\n  Followings: [],\r\n  Followers: [],\r\n};\r\n\r\nexport const initialState = {\r\n  isLoggingIn: false,\r\n  isLoggingOut: false,\r\n  isLoggedIn: false,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const signUpAction = (data) => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = {\r\n  type: SIGN_UP_SUCCESS,\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_REQUREST',\r\n    data,\r\n  }\r\n};\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_SUCCESS',\r\n    data,\r\n  }\r\n};\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_FAILURE',\r\n    data,\r\n  }\r\n};\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: 'LOG_OUT_REQUREST',\r\n    data,\r\n  }\r\n};\r\nexport const logoutSuccessAction = () => {\r\n  return {\r\n    type: 'LOG_OUT_SUCCESS',\r\n  }\r\n};\r\nexport const logoutFailureAction = () => {\r\n  return {\r\n    type: 'LOG_OUT_FAILURE',\r\n  }\r\n};\r\nexport const signUp = () => {\r\n  return {\r\n    type: SIGN_UP,\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN_REQUEST': {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n      };\r\n    }\r\n    case 'LOG_IN_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: true,\r\n        me: { ...action.data, nickname: 'MJoonJung'},\r\n        loginData: action.data,\r\n      };\r\n    }\r\n    case 'LOG_IN_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n      };\r\n    }\r\n    case 'LOG_OUT_REQUEST': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n    }\r\n    case 'LOG_OUT_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    }\r\n    case 'LOG_OUT_FAILURE': {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n      };\r\n    }\r\n    case 'SIGN_UP': {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}