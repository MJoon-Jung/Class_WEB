{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  isLoggingOut: false,\n  isLoggedIn: false,\n  signUpData: {},\n  loginData: {},\n  me: null\n};\nconst dummyUser = {\n  id: 1,\n  nickname: 'MJoonJung',\n  Posts: [],\n  Followings: [],\n  Followers: []\n};\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nconst LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nconst LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nconst LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nconst LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nconst LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nconst LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: LOG_IN_SUCCESS,\n    data\n  };\n};\nexport const loginFailureAction = data => {\n  return {\n    type: LOG_IN_FAILURE,\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: LOG_OUT_REQUEST,\n    data\n  };\n};\nexport const logoutSuccessAction = () => {\n  return {\n    type: LOG_OUT_SUCCESS\n  };\n};\nexport const logoutFailureAction = () => {\n  return {\n    type: LOG_OUT_FAILURE\n  };\n};\nexport const signUp = () => {\n  return {\n    type: SIGN_UP\n  };\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: dummyUser\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false,\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case LOG_OUT_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["D:/program/node_workspace/WEB/React-FullStack/FullStack-practice/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggingOut","isLoggedIn","signUpData","loginData","me","dummyUser","id","nickname","Posts","Followings","Followers","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","signUpAction","data","type","signUpSuccess","loginRequestAction","loginSuccessAction","loginFailureAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","signUp","state","action"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  isLoggingIn: false,\r\n  isLoggingOut: false,\r\n  isLoggedIn: false,\r\n  signUpData: {},\r\n  loginData: {},\r\n  me: null,\r\n};\r\n\r\nconst dummyUser = {\r\n  id: 1,\r\n  nickname: 'MJoonJung',\r\n  Posts: [],\r\n  Followings: [],\r\n  Followers: [],\r\n};\r\n\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nconst LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nconst LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nconst LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nconst LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nconst LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nconst LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const signUpAction = (data) => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = {\r\n  type: SIGN_UP_SUCCESS,\r\n};\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  }\r\n};\r\nexport const loginSuccessAction = (data) => {\r\n  return {\r\n    type: LOG_IN_SUCCESS,\r\n    data,\r\n  }\r\n};\r\nexport const loginFailureAction = (data) => {\r\n  return {\r\n    type: LOG_IN_FAILURE,\r\n    data,\r\n  }\r\n};\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n    data,\r\n  }\r\n};\r\nexport const logoutSuccessAction = () => {\r\n  return {\r\n    type: LOG_OUT_SUCCESS,\r\n  }\r\n};\r\nexport const logoutFailureAction = () => {\r\n  return {\r\n    type: LOG_OUT_FAILURE,\r\n  }\r\n};\r\nexport const signUp = () => {\r\n  return {\r\n    type: SIGN_UP,\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: true,\r\n        me: dummyUser,\r\n      };\r\n    }\r\n    case LOG_IN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n    }\r\n    case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isLoggedIn: false,\r\n        me: null,\r\n      };\r\n    }\r\n    case LOG_OUT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n      };\r\n    }\r\n    case SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}