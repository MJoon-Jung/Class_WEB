{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst configureStore = context => {\n  console.log(context);\n  const middlewares = [thunkMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["D:/program/node_workspace/WEB/React-FullStack/FullStack-practice/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","thunkMiddleware","reducer","configureStore","context","console","log","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,WAAW,GAAG,CAACN,eAAD,CAApB;AACA,QAAMO,QAAQ,GAAG,QACbV,OAAO,CAACF,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CADM,GAEbP,mBAAmB,CACnBJ,eAAe,CAAC,GAAGW,WAAJ,CADI,CAFvB;AAKA,QAAME,KAAK,GAAGZ,WAAW,CAACK,OAAD,EAAUM,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAVD;;AAYA,MAAMC,OAAO,GAAGX,aAAa,CAACI,cAAD,EAAiB;AAAEQ,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = (context) => {\r\n  console.log(context);\r\n  const middlewares = [thunkMiddleware];\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(\r\n      applyMiddleware(...middlewares),\r\n    );\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}